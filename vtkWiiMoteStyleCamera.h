/*=========================================================================

  Name:        vtkWiiMoteStyleCamera.h

  Author:      David Borland, The Renaissance Computing Institute (RENCI)

  Copyright:   The Renaissance Computing Institute (RENCI)

  License:     Licensed under the RENCI Open Source Software License v. 1.0.
               
               See included License.txt or 
               http://www.renci.org/resources/open-source-software-license
               for details.

=========================================================================*/
// .NAME vtkWiiMoteStyleCamera
// .SECTION Description
// vtkWiiMoteStyleCamera moves the camera based on analog and
// button events generated by a WiiMote using the Virtual Reality 
// Peripheral Network (VRPN: http://www.cs.unc.edu/Research/vrpn/).  
//
// .SECTION see also
// vtkDeviceInteractor vtkInteractionDevice

#ifndef __vtkWiiMoteStyleCamera_h
#define __vtkWiiMoteStyleCamera_h

#include "vtkInteractionDeviceConfigure.h"

#include "vtkWiiMOteStyle.h"

class VTK_INTERACTIONDEVICE_EXPORT vtkWiiMoteStyleCamera : public vtkWiiMoteStyle
{
public:
  static vtkWiiMoteStyleCamera* New();
  vtkTypeRevisionMacro(vtkWiiMoteStyleCamera,vtkWiiMoteStyle);
  void PrintSelf(ostream&, vtkIndent); 

  // Description:
  // Perform interaction based on an event
  virtual void OnEvent(vtkObject* caller, unsigned long eid, void* callData);

  // Description:
  // Set/get sensitivity parameters
  vtkSetMacro(ZoomSensitivity,double);
  vtkGetMacro(ZoomSensitivity,double);
  vtkSetMacro(PanSensitivity,double);
  vtkGetMacro(PanSensitivity,double);
  vtkSetMacro(RotateSensitivity,double);
  vtkGetMacro(RotateSensitivity,double);

protected:
  vtkWiiMoteStyleCamera();
  ~vtkWiiMoteStyleCamera();

  virtual void OnAnalog(vtkVRPNAnalog*);
  virtual void OnButton(vtkVRPNButton*);

  double ZoomSensitivity;
  double PanSensitivity;
  double RotateSensitivity;

  double XGravity;
  double YGravity;
  double ZGravity;
  double OldXGravity;
  double OldYGravity;
  double OldZGravity;

  bool TriggerDown;
  bool HomeDown;

  // Description:
  // Perform a pan interaction
  void Pan(double xDelta, double yDelta);

private:
  vtkWiiMoteStyleCamera(const vtkWiiMoteStyleCamera&);  // Not implemented.
  void operator=(const vtkWiiMoteStyleCamera&);  // Not implemented.
};

#endif